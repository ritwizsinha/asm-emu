1. CLAIMS:
    - The source  of both emulator and assembler is uploaded to github on the link (https://github.com/ritwizsinha/asm-emu)
      I also have added my name in all the source files and added declaration of authorship
    - The code is written in ISO C89
    - The code compiles without any errors and warnings
    - The compilation is done as follows with the following flags.
    - gcc -std=c89 -g -pedantic -W -Wall -Wpointer-arith -o asm asm.c
    PS: The flags -Wwrite-strings and -Wstrict-prototypes are not used as I have not protoyped any function but defined them above main
    - Every function has comments except for self-explanatory ones
    - Consistent and sensible formatting and sensible program structure is used.
    - Sensible variable, function & type names with explanatory comments are given
    - I have first read the file into a consistent internal form and then performed the operations.
    - I have diagonosed label errors like missing label, repeated label, bogus labels.
    - I have also given appropriate warnings like unused label, redundant label.
    - I have created an advanced listing file the listing file is of the following format:
        Address          MachineCode            Instruction mnemonics
    - I have also created a table for instruction names and operands and an array of structures has been used to store them.
    - I have correctly assembled the test programs and have also the attached the listing file, the error and warning files and the machine code file
    - I have also included additional test programs named from test5.asm
    - I have implemented set correctly and the example can be seen from the test3.asm file
    - I have not implemented the bubble sort myself but I am sure it will correctly compile and and run the program without any errors.
    - I am currently implementing the emulator for the assembler.
6. All files are separated semantically according to the nature of the functions and the data they access. 
    - Functions/
                - Comment.c : Functions related to comment detection and comment removal
                - Utilities.c :  General helper functions required during various operations
    - asm.c : Main file which has all the includes and the main function. The main file includes functions for initializing and parse1 and 
    parse2. It also deals with opening the file and reading it. 
    - constants.c : Initialization and # define of constants needed throughout program
    - error.c : Structure for storing errors and related functions for pushing and printing errors
    - label.c : Structure for storing the labels and related functions for extracting and detecting the labels
    - mnemonic.c : Structure for storing the mnemonics and related functions for initializing and detecting and formatting mnemonics
    - operand.c : Structure for operand 
    - parsedCode.c : Structure for the parsed code and related functions
    - warning.c : Structure for warnings and related functions, pretty similar to errors. 

6. Working: 
    1. The file is read and parsed using first parse and stored in the structure with separation.
    2. The parse1 parses the sentence and and stores the line number, label, operator and operand and also stores some errors which can be stored at this stage
    3. The parse 2 detects all errors and warnings using different logic.
    4. If there are errors only the error file is created
    5. If there are no errors then the listing file, machine code file and the warnings file is created. 